[{"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/index.tsx":"1","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/reportWebVitals.ts":"2","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/rematch/store.ts":"3","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/App.tsx":"4","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/rematch/index.ts":"5","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/constanst/routers.tsx":"6","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/rematch/LoadingTop.ts":"7","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/rematch/Notification.ts":"8","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/my-component/Button.tsx":"9","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/my-component/TextFiled.tsx":"10","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/my-component/CheckBox.tsx":"11","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/constanst/links.ts":"12","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/container/Home.tsx":"13","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/componet/home/RuleItem.tsx":"14","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/componet/footer/ListItemFooter.tsx":"15","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/container/Login.tsx":"16","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/componet/login/FrameLogin.tsx":"17","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/componet/home/ContainerGeneral.tsx":"18","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/container/ Register.tsx":"19","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/controller/index.ts":"20","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/controller/AccountController.ts":"21","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/controller/PathNameService.ts":"22","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/config/AppConfig.ts":"23","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/controller/fake/BaseModel.ts":"24","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/componet/product/Product.tsx":"25"},{"size":375,"mtime":1609811724156,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1609811724156,"results":"28","hashOfConfig":"27"},{"size":1057,"mtime":1609811724156,"results":"29","hashOfConfig":"27"},{"size":771,"mtime":1611192016209,"results":"30","hashOfConfig":"27"},{"size":491,"mtime":1609811724156,"results":"31","hashOfConfig":"27"},{"size":860,"mtime":1611192077499,"results":"32","hashOfConfig":"27"},{"size":451,"mtime":1609811724156,"results":"33","hashOfConfig":"27"},{"size":1565,"mtime":1609811724156,"results":"34","hashOfConfig":"27"},{"size":327,"mtime":1611195670553,"results":"35","hashOfConfig":"27"},{"size":904,"mtime":1611196700114,"results":"36","hashOfConfig":"27"},{"size":432,"mtime":1610088065288,"results":"37","hashOfConfig":"27"},{"size":96,"mtime":1611191678606,"results":"38","hashOfConfig":"27"},{"size":895,"mtime":1611283359677,"results":"39","hashOfConfig":"27"},{"size":216,"mtime":1611284654338,"results":"40","hashOfConfig":"27"},{"size":352,"mtime":1610123689178,"results":"41","hashOfConfig":"27"},{"size":1711,"mtime":1611279803904,"results":"42","hashOfConfig":"27"},{"size":392,"mtime":1611191368731,"results":"43","hashOfConfig":"27"},{"size":3314,"mtime":1611289464736,"results":"44","hashOfConfig":"27"},{"size":1074,"mtime":1611280725272,"results":"45","hashOfConfig":"27"},{"size":2028,"mtime":1611195259746,"results":"46","hashOfConfig":"27"},{"size":765,"mtime":1611277874330,"results":"47","hashOfConfig":"27"},{"size":55,"mtime":1611194799002,"results":"48","hashOfConfig":"27"},{"size":854,"mtime":1611196931998,"results":"49","hashOfConfig":"27"},{"size":8199,"mtime":1611194843218,"results":"50","hashOfConfig":"27"},{"size":886,"mtime":1611289222520,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"grjt8p",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/index.tsx",[],["109","110"],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/reportWebVitals.ts",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/rematch/store.ts",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/App.tsx",["111"],"import Login from \"./container/Login\";\nimport { createBrowserHistory } from \"history\";\nimport React, { useState } from \"react\";\nimport { Route, Router, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { routes } from \"./constanst/routers\";\n\nexport const history = createBrowserHistory({});\n\nfunction App() {\n\tconst [isAuthen, setIsAuthen] = useState<boolean>(true);\n\treturn isAuthen ? (\n\t\t<div>\n\t\t\t<Router history={history}>\n\t\t\t\t<Switch>\n\t\t\t\t\t{routes.map((route) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\tcomponent={route.component}\n\t\t\t\t\t\t\t\tpath={route.url}\n\t\t\t\t\t\t\t\tsensitive={route.sensitive}\n\t\t\t\t\t\t\t\tstrict={route.strict}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t): <Login></Login>\n}\n\nexport default App;\n","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/rematch/index.ts",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/constanst/routers.tsx",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/rematch/LoadingTop.ts",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/rematch/Notification.ts",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/my-component/Button.tsx",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/my-component/TextFiled.tsx",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/my-component/CheckBox.tsx",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/constanst/links.ts",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/container/Home.tsx",["112"],"import React from \"react\";\nimport ContainerGeneral from \"src/componet/home/ContainerGeneral\";\nimport RuleItem from \"src/componet/home/RuleItem\";\nimport Product from \"src/componet/product/Product\";\n\nexport default function Home() {\n\treturn (\n\t\t<ContainerGeneral>\n\t\t\t<div>\n\t\t\t\t<div className=\"slider-home\">\n\t\t\t\t\t<img src=\"https://vanluongg.github.io/vanluong/img/home/slider1.jpg\" />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"list-rules\">\n\t\t\t\t\t\t<RuleItem />\n\t\t\t\t\t\t<RuleItem />\n\t\t\t\t\t\t<RuleItem />\n\t\t\t\t\t\t<RuleItem />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"flex-center title-list-product\">\n\t\t\t\t\t\t<h1>Sản phẩm</h1>\n\t\t\t\t\t</div>\n\t\t\t\t<div className  = \"fr-list-product\">\n\t\t\t\t\t\n\t\t\t\t\t<div className = \"list-product-home\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]\n\t\t\t\t\t\t\t.map(item=> <Product></Product>)\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ContainerGeneral>\n\t);\n}\n","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/componet/home/RuleItem.tsx",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/componet/footer/ListItemFooter.tsx",[],["113","114"],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/container/Login.tsx",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/componet/login/FrameLogin.tsx",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/componet/home/ContainerGeneral.tsx",["115","116"],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/container/ Register.tsx",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/controller/index.ts",["117"],"import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport appConfig from \"../config/AppConfig\";\nimport { dispatch } from \"../rematch/store\";\nimport { AccountController } from \"./AccountController\";\nimport { PathNameService } from \"./PathNameService\";\n\nexport const URL = appConfig.apiGatewayUrl;\n\nconst getTokenFromLocalStorage = () => {\n\treturn localStorage.getItem(\"token\")\n}\nvar timeoutLoading: any;\nexport const appClient = axios.create({\n\tbaseURL: URL,\n\ttimeout: 10000,\n\theaders: {\n\t\tcommon: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tAuthorization: getTokenFromLocalStorage(),\n\t},\n\n});\n\n\n\n\nappClient.interceptors.request.use(\n\tfunction (config) {\n\t\tclearTimeout(timeoutLoading);\n\t\tdispatch.loadingTop.showLoad();\n\t\treturn config;\n\t},\n\tfunction (error) {\n\t\treturn Promise.reject(error);\n\t}\n);\n\n\nappClient.interceptors.response.use(\n\t(response: AxiosResponse) => {\n\t\ttimeoutLoading = setTimeout(() => {\n\t\t\tdispatch.loadingTop.hiddenLoad();\n\t\t\tclearTimeout(timeoutLoading);\n\t\t}, 100);\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\ttimeoutLoading = setTimeout(() => {\n\t\t\tdispatch.loadingTop.hiddenLoad();\n\t\t\tclearTimeout(timeoutLoading);\n\t\t}, 100);\n\t\tif (error.message == \"Network Error\") {\n\t\t\tdispatch.notification.error(\"Lỗi kết nối máy chủ\")\n\t\t\t// window.location.href = \"network-error\"\n\t\t}\n\t\telse if (error.response) {\n\t\t\tif (error.response.status === 401) {\n\t\t\t\tdispatch.notification.error(\"Lỗi xác thực, vui lòng đăng nhập lại\")\n\t\t\t} else if (error.response.status && error.response.status === 500) {\n\t\t\t\tif (error.response.data) {\n\t\t\t\t\tdispatch.notification.error(error.response.data.message)\n\t\t\t\t} else {\n\t\t\t\t\tdispatch.notification.error(\"Có lỗi xảy ra gi do xat r\")\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\terror.response.status &&\n\t\t\t\terror.response.status === 400 &&\n\t\t\t\terror.response.data\n\t\t\t) {\n\n\t\t\t} else {\n\n\t\t\t}\n\t\t} else {\n\t\t}\n\t\treturn Promise.reject(error);\n\t}\n);\n\nexport const accountController = new AccountController(appConfig.apiGatewayUrl,  PathNameService.account, appClient);","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/controller/AccountController.ts",["118"],"/* eslint-disable @typescript-eslint/no-useless-constructor */\nimport { BaseModel } from \"@BaseTypes/model/BaseModel\";\nimport { AxiosInstance } from \"axios\";\nimport { BaseController } from \"./fake/BaseModel\";\nimport { PathNameService } from \"./PathNameService\";\n\nexport class AccountController extends BaseController<Account> {\n\tconstructor(\n\t\tserviceURL: string,\n\t\tserviceName: PathNameService,\n\t\tappClient: AxiosInstance\n\t) {\n\t\tsuper(serviceURL, serviceName, appClient);\n\t}\n\t\n\t// `${this.serviceURL}/${this.basePath}/login`\n\tasync login(username: string, password: string) {\n\t\t// this.client.head\n\t\treturn this.client\n\t\t\t.get(\"http://localhost:8080/test/luong\", {\n\t\t\t\tdata: { username, password },\n\t\t\t})\n\t\t\t.then((res) => res.data)\n\t\t\t.catch((res) => null);\n\t}\n}\n","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/controller/PathNameService.ts",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/config/AppConfig.ts",[],"/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/controller/fake/BaseModel.ts",["119","120","121","122"],"\nimport {v4 as uuidv4}  from \"uuid\"\nimport { AxiosInstance } from \"axios\";\nimport { BaseModel } from \"@BaseTypes/model/BaseModel\";\nimport { FindFilter, ListFilter } from \"@BaseTypes/model/Filter\";\nimport { Paging } from \"@BaseTypes/model/Paging\";\nimport { IBaseController } from \"../../submodules/base-model/controller/IBaseController\";\nimport { PathNameService } from \"../PathNameService\";\n\nexport class BaseController<T extends BaseModel> implements IBaseController<T> {\n    public basePath: string;\n    public client : AxiosInstance;\n    public serviceURL : string; \n\tconstructor(URL: string, basePath: PathNameService, appClient: AxiosInstance) {\n        this.basePath = basePath;\n        this.serviceURL = URL ;\n        this.client = appClient\n\t}\n    get(filter: any): Promise<T> {\n        throw new Error(\"Method not implemented.\");\n    }\n\tprivate getItem(basePath: string): Promise<T[]> {\n\t\tvar dataLocal = localStorage.getItem(basePath);\n\t\tvar dataLocalParse = JSON.parse(dataLocal || \"[]\");\n        if (!dataLocalParse) dataLocalParse = [];\n        dataLocalParse =  dataLocalParse.filter((item:any)=> {\n            if(item.isDeleted){\n                return item;\n            }\n        });\n\t\treturn Promise.resolve(dataLocalParse || []);   \n\t}\n\tprivate setItem(t: T[]): Promise<T[]> {\n\t\tlocalStorage.setItem(this.basePath, JSON.stringify(t));\n\t\treturn Promise.resolve(t);\n\t}\n\n    \n    private sanitizeParamsList(params: ListFilter<T>): ListFilter<T> {\n        params = { ...params };\n        if (typeof params.page === \"string\")\n            params.page = Number(params.page);\n\n        if (!params.page) params.page = 1;\n\n        if (typeof params.pageSize === \"string\")\n            params.pageSize = Number(params.pageSize) || 10;\n\n        if (!params.pageSize) params.pageSize = 10;\n\n        if (typeof params.query === \"string\")\n            params.query = JSON.parse(params.query);\n        if (!params.query) params.query = {};\n\n        params = this.sanitizeParamsBaseListProps(params);\n        return params;\n    }\n    private sanitizeParamsFind(params: FindFilter<T>): FindFilter<T> {\n        if (typeof params.limit === \"string\")\n            params.limit = Number(params.limit) || 1000;\n        if (!params.offset) params.offset = 0;\n\n        if (typeof params.query === \"string\")\n            params.query = JSON.parse(params.query);\n        if (!params.query) params.query = {};\n        params = this.sanitizeParamsBaseListProps(params);\n        return params;\n    }\n\n    private sanitizeParamsBaseListProps(params: any): any {\n        if(!params.sort){\n            params.sort = \"-createdAt\"\n        }   \n        if (params.sort) {\n            if (typeof params.sort === \"string\") {\n                params.sort = params.sort.replace(/,/g, \" \").split(\" \");\n            }\n        }\n\n        if (params.searchFields) {\n            if (typeof params.searchFields === \"string\") {\n                params.searchFields = params.searchFields.trim();\n                params.searchFields = params.searchFields\n                    .replace(/,/g, \" \")\n                    .split(\" \");\n            }\n        } else params.searchFields = []\n        return params;\n    }\n\n    public sort<T extends BaseModel>(data: T[], sort:string[]): T[]{\n        console.log(data)\n        data =  data.sort((a: any , b:any)=>{\n            for (let i = 0; i < sort.length; i++) {\n                const itemSort  = sort[i];\n                var typeSort = itemSort.substring(0,1) === \"-\" ? -1 : 1;\n                var fieldSort = itemSort.substring(0,1) === \"-\" ? itemSort.substring(1,itemSort.length) : itemSort;\n                if(typeof a[fieldSort] == \"number\"){\n                    if(a[fieldSort] === b[fieldSort]){\n                        return 0;\n                    }\n                    if(a[fieldSort] > b[fieldSort]){\n                        return typeSort\n                    }\n                    else {\n                        return -typeSort;\n                    }\n                }\n                if(typeof a[fieldSort]== \"string\"){\n                    a[fieldSort] = a[fieldSort]?.toLowerCase() || \" \";\n                    b[fieldSort] = b[fieldSort]?.toLowerCase() || \" \"\n                    if(a[fieldSort] === b[fieldSort]){\n                        return 0;\n                    }\n                    if(a[fieldSort] > b[fieldSort]){\n                        return typeSort\n                    }\n                    else {\n                        return -typeSort;\n                    }\n                }\n                var dateA:any = new Date(a[fieldSort]) \n                var dateB:any = new Date(b[fieldSort])\n                if(dateA !== \"Invalid Date\" && dateB !== \"Invalid Date\"){\n                    if(dateA.getTime() === dateB.getTime()){\n                        return 0;\n                    }\n                    if(dateA.getTime() > dateB.getTime()){\n                        return typeSort\n                    }\n                    else {\n                        return -typeSort;\n                    }\n                }\n                if(typeof a[fieldSort]=== \"boolean\"){\n                    if(a[fieldSort] && b[fieldSort]){\n                        return 0;\n                    }\n                    if(a[fieldSort] === true && b[fieldSort]=== false){\n                        return typeSort\n                    }\n                    else {\n                        return -typeSort;\n                    }\n                }\n\n            }\n\n            return 0\n         })     \n         \n        return data;\n    }\n\n    search<T>(data : T[], search : string, searchField: string[] ): T[]{\n        if(searchField.length ==0){\n            return data;\n        }\n        const newData = data.map((item: any)=>{\n            for (let i = 0; i < searchField.length; i++) {\n                const filed = searchField[i];\n                try {\n                    var valueSearch: string = item[filed].toString();\n                valueSearch = valueSearch.toLowerCase()\n                if(valueSearch.search(search.toLocaleLowerCase())>=0){\n                    return item;\n                }\n                } catch (error) {\n                    console.log(\"Field wrong\")\n                }\n                \n            }\n        }).filter(item=>{\n            if(item) return item\n        })\n        return newData;\n    }\n\n\tasync find(params: FindFilter<T>): Promise<T[]> {\n        params = this.sanitizeParamsFind(params)\n        var dataAll = await this.getItem(this.basePath);\n        dataAll = this.search(dataAll, params.search || \"\", params.searchFields || []);\n        dataAll = this.sort(dataAll, params.sort as [])\n\t\treturn Promise.resolve(dataAll);\n\t}\n\n\tasync list(params: ListFilter<T>): Promise<Paging<T>> {\n        params = this.sanitizeParamsList(params);\n        var dataAll = await (await this.getItem(this.basePath))\n        dataAll = this.search(dataAll, params.search || \"\", params.searchFields || []);\n        dataAll = this.sort(dataAll, params.sort as [])\n        var dataPaging = dataAll.slice(((params.page || 1)-1)* (params.pageSize||5), (((params.page || 1)-1)* (params.pageSize||5) + (params.pageSize || 5)));\n\n\t\treturn Promise.resolve({\n            total : dataAll.length,\n            totalPages :  Math.ceil(dataAll.length/(params.pageSize || 0)),\n            page : params.page,\n            pageSize : params.pageSize,\n            rows : dataPaging\n        });\n    }\n    \n    async save(t: T): Promise<T> {\n\t\tt.updatedAt = new Date();\n\t\tt.isDeleted = false;\n\t\tvar data = await this.getItem(this.basePath);\n\t\tif (t.id) {\n\t\t\tconst index = data.findIndex((item) => (item.id === t.id));\n\t\t\tif (index >= 0) {\n\t\t\t\tdata[index] = t;\n\t\t\t\tthis.setItem(data);\n\t\t\t\treturn Promise.resolve(t);\n\t\t\t}\n        }\n        else {t.id = uuidv4()}\n\t\tt.createdAt = new Date();\n\t\tdata.push(t);\n\t\tawait this.setItem(data);\n\t\treturn Promise.resolve(t);\n\t}\n\n\tasync delete(id: string): Promise<T> {\n\t\tvar data = await this.getItem(this.basePath);\n\t\tconst index = data.findIndex((item) => (item.id === id));\n\t\tif (index >= 0) {\n\t\t\tdata[index].isDeleted = true;\n\t\t\tthis.setItem(data);\n\t\t\treturn Promise.resolve(data[index]);\n\t\t}\n\t\tthrow new Error(\"Produce not found\");\n    }\n}\n\n","/home/lgnvpr/Documents/Fpoly/java-4/lab/ass-java4/src/componet/product/Product.tsx",["123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":11,"column":19,"nodeType":"130","messageId":"131","endLine":11,"endColumn":30},{"ruleId":"132","severity":1,"message":"133","line":11,"column":6,"nodeType":"134","endLine":11,"endColumn":77},{"ruleId":"124","replacedBy":"135"},{"ruleId":"126","replacedBy":"136"},{"ruleId":"132","severity":1,"message":"133","line":35,"column":7,"nodeType":"134","endLine":35,"endColumn":73},{"ruleId":"132","severity":1,"message":"133","line":68,"column":7,"nodeType":"134","endLine":70,"endColumn":9},{"ruleId":"137","severity":1,"message":"138","line":53,"column":21,"nodeType":"139","messageId":"140","endLine":53,"endColumn":23},{"ruleId":"128","severity":1,"message":"141","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":19},{"ruleId":"142","severity":1,"message":"143","line":26,"column":59,"nodeType":"144","messageId":"145","endLine":26,"endColumn":61},{"ruleId":"137","severity":1,"message":"138","line":156,"column":31,"nodeType":"139","messageId":"140","endLine":156,"endColumn":33},{"ruleId":"142","severity":1,"message":"146","line":159,"column":45,"nodeType":"144","messageId":"145","endLine":159,"endColumn":47},{"ruleId":"142","severity":1,"message":"143","line":173,"column":23,"nodeType":"144","messageId":"145","endLine":173,"endColumn":25},{"ruleId":"132","severity":1,"message":"133","line":12,"column":17,"nodeType":"134","endLine":12,"endColumn":94},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"@typescript-eslint/no-unused-vars","'setIsAuthen' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["147"],["148"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'BaseModel' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a value to be returned at the end of arrow function.","no-global-assign","no-unsafe-negation"]